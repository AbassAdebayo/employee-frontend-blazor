@page "/employees"
@inject NavigationManager _navigationManager
@inject NotificationService _notificationService
@inject IJSRuntime JSRuntime



<h3>Employee List</h3>

@if (employees == null)
{
    <p>Loading...</p>
}
else if (employees.ToList().Count == 0)
{
    <p>No employees found.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Address</th>
                <th>Gender</th>
                <th>Created At</th>
                <th>Updated At</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
                <tr>
                    <td>@employee.FirstName</td>
                    <td>@employee.LastName</td>
                    <td>@employee.Email</td>
                    <td>@employee.PhoneNumber</td>
                    <td>@employee.Address</td>
                    <td>@employee.Gender</td>
                    <td>@employee.CreatedAt</td>
                    <td>@employee.UpdatedAt</td>

                     <td>
                       <a href="/edit-employee/@employee.Id" class="btn btn-primary">Edit</a>
                        <button class="btn btn-danger" @onclick="() => DeleteEmployee(employee.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<EmployeeModel> employees;   

    [Inject]
    private EmployeeService employeeService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Fetch all employees using the EmployeeService
        employees = await employeeService.GetAllEmployeesAsync();
        
    }

    private async Task DeleteEmployee(Guid Id)
    {
        // Use the browser's built-in confirmation dialog
        var confirmDelete = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this employee?");
        if (confirmDelete)
        {
            // Perform the delete operation here
            await employeeService.DeleteEmployee(Id);

            _notificationService.ShowNotification("Employee deleted successfullly");
            
            // After successful deletion, refresh the employee list
            employees = await employeeService.GetAllEmployeesAsync();

            // To re-render the component with updated data
            StateHasChanged(); 
        }
    }
}
